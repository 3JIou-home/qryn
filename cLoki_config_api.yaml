swagger: "2.0"
info:
  title: cLoki configuration API
  description: cLoki configuration API
  version: 1.0.0
host: www
schemes:
  - http
paths:
  /config/v1/alerts:
    post:
      description: Create an alerting rule
      operationId: createRule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: rule
          in: body
          schema:
            $ref: '#/definitions/alertRule'
      responses:
        200:
          description: ok response
          schema:
            $ref: '#/definitions/alertRule'
        400:
          description: bad request (no required properties, bad logql request, name is not unique, etc)
          schema:
            $ref: '#/definitions/genericResponse'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/genericResponse'
    get:
      description: get all alerts (maybe paginated)
      operationId: getAlerts
      produces:
        - application/json
      parameters:
        - name: offset
          type: number
          in: query
        - name: limit
          type: number
          in: query
      responses:
        200:
          description: ok
          schema:
            type: object
            properties:
              alerts:
                type: array
                items:
                  $ref: '#/definitions/alertRule'
              count:
                type: number
        400:
          description: bad request (incorrect limit, incorrect offset)
          schema:
            $ref: '#/definitions/genericResponse'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/genericResponse'
  /config/v1/alerts/{name}:
    get:
      description: get a single alert
      produces:
        - application/json
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/alertRule'
        404:
          description: not found
          schema:
            $ref: '#/definitions/genericResponse'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/genericResponse'
    put:
      description: update alert
      operationId: updateAlert
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: alert
          in: body
          schema:
            $ref: '#/definitions/alertRule'
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/alertRule'
        400:
          description: bad request (no required properties, bad logql request, name is not unique, etc)
          schema:
            $ref: '#/definitions/genericResponse'
        404:
          description: not found
          schema:
            $ref: '#/definitions/genericResponse'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/genericResponse'
    delete:
      description: delete alert
      operationId: deleteAlert
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/genericResponse'
        404:
          description: not found
          schema:
            $ref: '#/definitions/genericResponse'
        500:
          description: internal server error
          schema:
            $ref: '#/definitions/genericResponse'
definitions:
  alertRule:
    type: object
    properties:
      name:
        type: string
        description: unique name for the rule
      request:
        type: string
        description: logql request for the rule
      labels:
        type: object
        description: key-value rairs to add to the alert labels
        additionalProperties:
          type: string
    required:
      - name
      - request
  genericResponse:
    type: object
    properties:
      code:
        type: number
        description: http result code (from the header)
      message:
        type: string
        description: error message (or ok message)
