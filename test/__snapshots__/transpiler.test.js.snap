// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`log_range_aggregation 1 1`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 300000,
    "matrix": true,
    "step": 5000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      Raw {
        "raw": "labels",
      },
      "labels",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "toFloat64(count(1)) * 1000 / 300000",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "rate_a",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [],
            "conditions": Conjunction {
              "args": Array [
                Condition {
                  "column": Raw {
                    "raw": "",
                    "toString": [Function],
                  },
                  "operator": undefined,
                  "value": Value {
                    "value": undefined,
                  },
                },
                Condition {
                  "column": Raw {
                    "raw": "samples.fingerprint IN idx_sel",
                  },
                  "operator": undefined,
                  "value": Value {
                    "value": undefined,
                  },
                },
              ],
            },
            "ctx": Object {
              "duration": 300000,
              "matrix": true,
              "step": 5000,
            },
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              Array [
                "timestamp_ns",
                "desc",
              ],
              Array [
                "labels",
                "desc",
              ],
            ],
            "params": Object {
              "from": Parameter {
                "name": "from",
                "value": 1,
              },
              "isMatrix": Parameter {
                "name": "isMatrix",
                "value": null,
              },
              "limit": Parameter {
                "name": "limit",
                "value": 3,
              },
              "samplesTable": Parameter {
                "name": "samplesTable",
                "value": "loki.samples_read",
              },
              "timeSeriesTable": Parameter {
                "name": "timeSeriesTable",
                "value": "loki.time_series",
              },
              "timestamp_shift": Parameter {
                "name": "timestamp_shift",
                "value": null,
              },
              "to": Parameter {
                "name": "to",
                "value": 2,
              },
            },
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              Array [
                "samples.labels",
                "labels",
              ],
              Array [
                "samples.string",
                "string",
              ],
              Array [
                "samples.fingerprint",
                "fingerprint",
              ],
              Array [
                Raw {
                  "raw": "",
                  "toString": [Function],
                },
                "timestamp_ns",
              ],
            ],
            "tables": Array [
              Array [
                Parameter {
                  "name": "samplesTable",
                  "value": "loki.samples_read",
                },
                Term {
                  "term": "samples",
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "11181629751084832.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "minus_nam",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "aut illo",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "11181629751084832",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 300000,
          "matrix": true,
          "step": 5000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`log_range_aggregation 1 2`] = `"WITH idx_sel AS (select \`11181629751084832\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'minus_nam') and (\`val\` = 'aut illo'))) as \`11181629751084832\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc) select labels as \`labels\`,intDiv(timestamp_ns, 300000) * 300000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 300000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc"`;

exports[`log_range_aggregation 2 1`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 300000,
    "matrix": true,
    "step": 5000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      Raw {
        "raw": "labels",
      },
      "labels",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "toFloat64(count(1)) * 1000 / 300000",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "rate_a",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [],
            "conditions": Conjunction {
              "args": Array [
                Condition {
                  "column": Raw {
                    "raw": "",
                    "toString": [Function],
                  },
                  "operator": undefined,
                  "value": Value {
                    "value": undefined,
                  },
                },
                Condition {
                  "column": Raw {
                    "raw": "samples.fingerprint IN idx_sel",
                  },
                  "operator": undefined,
                  "value": Value {
                    "value": undefined,
                  },
                },
                Condition {
                  "column": Raw {
                    "raw": "position(string, 'consequatur nam soluta')",
                  },
                  "operator": "=",
                  "value": Value {
                    "value": 0,
                  },
                },
              ],
            },
            "ctx": Object {
              "duration": 300000,
              "matrix": true,
              "step": 5000,
            },
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              Array [
                "timestamp_ns",
                "desc",
              ],
              Array [
                "labels",
                "desc",
              ],
            ],
            "params": Object {
              "from": Parameter {
                "name": "from",
                "value": 1,
              },
              "isMatrix": Parameter {
                "name": "isMatrix",
                "value": null,
              },
              "limit": Parameter {
                "name": "limit",
                "value": 3,
              },
              "samplesTable": Parameter {
                "name": "samplesTable",
                "value": "loki.samples_read",
              },
              "timeSeriesTable": Parameter {
                "name": "timeSeriesTable",
                "value": "loki.time_series",
              },
              "timestamp_shift": Parameter {
                "name": "timestamp_shift",
                "value": null,
              },
              "to": Parameter {
                "name": "to",
                "value": 2,
              },
            },
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              Array [
                "samples.labels",
                "labels",
              ],
              Array [
                "samples.string",
                "string",
              ],
              Array [
                "samples.fingerprint",
                "fingerprint",
              ],
              Array [
                Raw {
                  "raw": "",
                  "toString": [Function],
                },
                "timestamp_ns",
              ],
            ],
            "tables": Array [
              Array [
                Parameter {
                  "name": "samplesTable",
                  "value": "loki.samples_read",
                },
                Term {
                  "term": "samples",
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "1489893072922741.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 1,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "1489893072922741",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "position(string, 'consequatur nam soluta')",
              },
              "operator": "=",
              "value": Value {
                "value": 0,
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 300000,
          "matrix": true,
          "step": 5000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`log_range_aggregation 2 2`] = `"WITH idx_sel AS (select \`1489893072922741\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 1))) as \`1489893072922741\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (position(string, 'consequatur nam soluta') = 0) order by \`timestamp_ns\` desc,\`labels\` desc) select labels as \`labels\`,intDiv(timestamp_ns, 300000) * 300000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 300000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc"`;

exports[`log_range_aggregation 3 1`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 300000,
    "matrix": true,
    "step": 5000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      Raw {
        "raw": "labels",
      },
      "labels",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "toFloat64(count(1)) * 1000 / 300000",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "rate_a",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [],
            "conditions": Conjunction {
              "args": Array [
                Condition {
                  "column": Raw {
                    "raw": "",
                    "toString": [Function],
                  },
                  "operator": undefined,
                  "value": Value {
                    "value": undefined,
                  },
                },
                Condition {
                  "column": Raw {
                    "raw": "samples.fingerprint IN idx_sel",
                  },
                  "operator": undefined,
                  "value": Value {
                    "value": undefined,
                  },
                },
                Condition {
                  "column": Raw {
                    "raw": "extractAllGroups(string, '(^mol[eE][^ ]+e +voluptatibus)')",
                  },
                  "operator": "!=",
                  "value": Raw {
                    "raw": "[]",
                  },
                },
              ],
            },
            "ctx": Object {
              "duration": 300000,
              "matrix": true,
              "step": 5000,
            },
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              Array [
                "timestamp_ns",
                "desc",
              ],
              Array [
                "labels",
                "desc",
              ],
            ],
            "params": Object {
              "from": Parameter {
                "name": "from",
                "value": 1,
              },
              "isMatrix": Parameter {
                "name": "isMatrix",
                "value": null,
              },
              "limit": Parameter {
                "name": "limit",
                "value": 3,
              },
              "samplesTable": Parameter {
                "name": "samplesTable",
                "value": "loki.samples_read",
              },
              "timeSeriesTable": Parameter {
                "name": "timeSeriesTable",
                "value": "loki.time_series",
              },
              "timestamp_shift": Parameter {
                "name": "timestamp_shift",
                "value": null,
              },
              "to": Parameter {
                "name": "to",
                "value": 2,
              },
            },
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              Array [
                "samples.labels",
                "labels",
              ],
              Array [
                "samples.string",
                "string",
              ],
              Array [
                "samples.fingerprint",
                "fingerprint",
              ],
              Array [
                Raw {
                  "raw": "",
                  "toString": [Function],
                },
                "timestamp_ns",
              ],
            ],
            "tables": Array [
              Array [
                Parameter {
                  "name": "samplesTable",
                  "value": "loki.samples_read",
                },
                Term {
                  "term": "samples",
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "731284440289071.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "et_dolorem",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "!=",
                            "value": Value {
                              "value": "nemo doloremque",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "731284440289071",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "extractAllGroups(string, '(^mol[eE][^ ]+e +voluptatibus)')",
              },
              "operator": "!=",
              "value": Raw {
                "raw": "[]",
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 300000,
          "matrix": true,
          "step": 5000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`log_range_aggregation 3 2`] = `"WITH idx_sel AS (select \`731284440289071\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'et_dolorem') and (\`val\` != 'nemo doloremque'))) as \`731284440289071\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(^mol[eE][^ ]+e +voluptatibus)') != []) order by \`timestamp_ns\` desc,\`labels\` desc) select labels as \`labels\`,intDiv(timestamp_ns, 300000) * 300000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 300000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc"`;

exports[`log_range_aggregation 4 1`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 1000,
    "matrix": true,
    "step": 5000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    "labels",
    Array [
      Raw {
        "raw": "intDiv(timestamp_ns, 5000) * 5000",
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      Term {
        "term": "rate_b",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "6596991074968059.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 0,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "6596991074968059",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "extractAllGroups(string, '(cons[eE][^ ]+r nam soluta)')",
              },
              "operator": "=",
              "value": Raw {
                "raw": "[]",
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 1000,
          "matrix": true,
          "step": 5000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_b": With {
      "alias": "rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "labels",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "toFloat64(count(1)) * 1000 / 1000",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "extractAllGroups(string, '(cons[eE][^ ]+r nam soluta)')",
                        },
                        "operator": "=",
                        "value": Raw {
                          "raw": "[]",
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 1000,
                    "matrix": true,
                    "step": 5000,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": 1,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 3,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": "loki.samples_read",
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": "loki.time_series",
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": 2,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": "loki.samples_read",
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`log_range_aggregation 4 2`] = `"WITH idx_sel AS (select \`6596991074968059\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 0))) as \`6596991074968059\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(cons[eE][^ ]+r nam soluta)') = []) order by \`timestamp_ns\` desc,\`labels\` desc), rate_b AS (select labels as \`labels\`,intDiv(timestamp_ns, 1000) * 1000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 1000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc) select \`labels\`,intDiv(timestamp_ns, 5000) * 5000 as \`timestamp_ns\`,argMin(rate_b.value, rate_b.timestamp_ns) as \`value\` from \`rate_b\` group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc"`;

exports[`shoud transpile unwrap 1`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 60000,
    "matrix": true,
    "step": 120000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": null,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 2000,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": null,
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": null,
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": null,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    "labels",
    Array [
      Raw {
        "raw": "intDiv(timestamp_ns, 120000) * 120000",
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "argMin(uw_rate_b.value, uw_rate_b.timestamp_ns)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "uw_rate_b",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [
              "labels",
              "timestamp_ns",
            ],
            "conditions": Conjunction {
              "args": Array [],
            },
            "ctx": Object {},
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              "labels",
              "timestamp_ns",
            ],
            "params": Object {},
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              Array [
                Raw {
                  "raw": "arraySort(arrayFilter(x -> arrayExists(y -> x.1 == y, ['fmt']) != 0, labels))",
                },
                "labels",
              ],
              Array [
                Raw {
                  "raw": "SUM(unwrapped) / 60",
                },
                "value",
              ],
              Array [
                Raw {
                  "raw": "",
                  "toString": [Function],
                },
                "timestamp_ns",
              ],
            ],
            "tables": Array [
              Array [
                WithReference {
                  "ref": With {
                    "alias": "uw_rate_a",
                    "inline": undefined,
                    "query": Select {
                      "aggregations": Array [],
                      "conditions": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Raw {
                              "raw": "",
                              "toString": [Function],
                            },
                            "operator": undefined,
                            "value": Value {
                              "value": undefined,
                            },
                          },
                          Condition {
                            "column": Raw {
                              "raw": "samples.fingerprint IN idx_sel",
                            },
                            "operator": undefined,
                            "value": Value {
                              "value": undefined,
                            },
                          },
                          Condition {
                            "column": Condition {
                              "column": Raw {
                                "raw": "arrayExists(x -> x.1 == 'int_lbl', labels)",
                              },
                              "operator": "=",
                              "value": Value {
                                "value": 1,
                              },
                            },
                            "operator": "=",
                            "value": Condition {
                              "column": Raw {
                                "raw": "isNotNull(unwrapped)",
                              },
                              "operator": "=",
                              "value": Value {
                                "value": 1,
                              },
                            },
                          },
                        ],
                      },
                      "ctx": Object {
                        "duration": 60000,
                        "matrix": true,
                        "step": 120000,
                      },
                      "dist": false,
                      "fmt": undefined,
                      "having_conditions": Conjunction {
                        "args": Array [],
                      },
                      "joins": Array [],
                      "limitbycolumns": undefined,
                      "limits": undefined,
                      "order_expressions": Array [
                        Array [
                          "timestamp_ns",
                          "desc",
                        ],
                        Array [
                          "labels",
                          "desc",
                        ],
                      ],
                      "params": Object {
                        "from": Parameter {
                          "name": "from",
                          "value": null,
                        },
                        "isMatrix": Parameter {
                          "name": "isMatrix",
                          "value": null,
                        },
                        "limit": Parameter {
                          "name": "limit",
                          "value": 2000,
                        },
                        "samplesTable": Parameter {
                          "name": "samplesTable",
                          "value": null,
                        },
                        "timeSeriesTable": Parameter {
                          "name": "timeSeriesTable",
                          "value": null,
                        },
                        "timestamp_shift": Parameter {
                          "name": "timestamp_shift",
                          "value": null,
                        },
                        "to": Parameter {
                          "name": "to",
                          "value": null,
                        },
                      },
                      "preconditions": Conjunction {
                        "args": Array [],
                      },
                      "request_totals": undefined,
                      "sampling": undefined,
                      "select_list": Array [
                        Array [
                          "samples.labels",
                          "labels",
                        ],
                        Array [
                          "samples.string",
                          "string",
                        ],
                        Array [
                          "samples.fingerprint",
                          "fingerprint",
                        ],
                        Array [
                          Raw {
                            "raw": "",
                            "toString": [Function],
                          },
                          "timestamp_ns",
                        ],
                        Array [
                          Raw {
                            "raw": "toFloat64OrNull(arrayFirst(x -> x.1 == 'int_lbl', labels).2)",
                          },
                        ],
                      ],
                      "tables": Array [
                        Array [
                          Parameter {
                            "name": "samplesTable",
                            "value": null,
                          },
                          Term {
                            "term": "samples",
                          },
                        ],
                      ],
                      "withs": Object {},
                    },
                  },
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "1959161064612276.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "test_id",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "0.7857680014573265_json",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "1959161064612276",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "uw_rate_a": With {
      "alias": "uw_rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Condition {
                "column": Raw {
                  "raw": "arrayExists(x -> x.1 == 'int_lbl', labels)",
                },
                "operator": "=",
                "value": Value {
                  "value": 1,
                },
              },
              "operator": "=",
              "value": Condition {
                "column": Raw {
                  "raw": "isNotNull(unwrapped)",
                },
                "operator": "=",
                "value": Value {
                  "value": 1,
                },
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 60000,
          "matrix": true,
          "step": 120000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": null,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 2000,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": null,
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": null,
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": null,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "toFloat64OrNull(arrayFirst(x -> x.1 == 'int_lbl', labels).2)",
            },
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": null,
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "uw_rate_b": With {
      "alias": "uw_rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          "labels",
          "timestamp_ns",
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "arraySort(arrayFilter(x -> arrayExists(y -> x.1 == y, ['fmt']) != 0, labels))",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "SUM(unwrapped) / 60",
            },
            "value",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "uw_rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Condition {
                          "column": Raw {
                            "raw": "arrayExists(x -> x.1 == 'int_lbl', labels)",
                          },
                          "operator": "=",
                          "value": Value {
                            "value": 1,
                          },
                        },
                        "operator": "=",
                        "value": Condition {
                          "column": Raw {
                            "raw": "isNotNull(unwrapped)",
                          },
                          "operator": "=",
                          "value": Value {
                            "value": 1,
                          },
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 60000,
                    "matrix": true,
                    "step": 120000,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": null,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 2000,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": null,
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": null,
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": null,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                    Array [
                      Raw {
                        "raw": "toFloat64OrNull(arrayFirst(x -> x.1 == 'int_lbl', labels).2)",
                      },
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": null,
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`shoud transpile unwrap 2`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 60000,
    "matrix": true,
    "step": 120000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": null,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 2000,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": null,
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": null,
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": null,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    "labels",
    Array [
      Raw {
        "raw": "intDiv(timestamp_ns, 120000) * 120000",
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "argMin(uw_rate_b.value, uw_rate_b.timestamp_ns)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "uw_rate_b",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [
              "labels",
              "timestamp_ns",
            ],
            "conditions": Conjunction {
              "args": Array [],
            },
            "ctx": Object {},
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              "labels",
              "timestamp_ns",
            ],
            "params": Object {},
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              Array [
                Raw {
                  "raw": "arraySort(arrayFilter(x -> arrayExists(y -> x.1 == y, ['fmt']) != 0, arraySort(arrayConcat(arrayFilter(x -> arrayExists(y -> y.1 == x.1, extra_labels) == 0, labels), extra_labels))))",
                },
                "labels",
              ],
              Array [
                Raw {
                  "raw": "SUM(unwrapped) / 60",
                },
                "value",
              ],
              Array [
                Raw {
                  "raw": "",
                  "toString": [Function],
                },
                "timestamp_ns",
              ],
            ],
            "tables": Array [
              Array [
                WithReference {
                  "ref": With {
                    "alias": "uw_rate_a",
                    "inline": undefined,
                    "query": Select {
                      "aggregations": Array [],
                      "conditions": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Raw {
                              "raw": "",
                              "toString": [Function],
                            },
                            "operator": undefined,
                            "value": Value {
                              "value": undefined,
                            },
                          },
                          Condition {
                            "column": Raw {
                              "raw": "samples.fingerprint IN idx_sel",
                            },
                            "operator": undefined,
                            "value": Value {
                              "value": undefined,
                            },
                          },
                          Condition {
                            "column": Raw {
                              "raw": "isValidJSON(samples.string)",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 1,
                            },
                          },
                          Condition {
                            "column": Disjunction {
                              "args": Array [
                                Condition {
                                  "column": Raw {
                                    "raw": "arrayFirstIndex(x -> x.1 == 'int_lbl2', extra_labels)",
                                  },
                                  "operator": "!=",
                                  "value": Value {
                                    "value": 0,
                                  },
                                },
                                Condition {
                                  "column": Raw {
                                    "raw": "arrayExists(x -> x.1 == 'int_lbl2', labels)",
                                  },
                                  "operator": "=",
                                  "value": Value {
                                    "value": 1,
                                  },
                                },
                              ],
                            },
                            "operator": "=",
                            "value": Condition {
                              "column": Raw {
                                "raw": "isNotNull(unwrapped)",
                              },
                              "operator": "=",
                              "value": Value {
                                "value": 1,
                              },
                            },
                          },
                        ],
                      },
                      "ctx": Object {
                        "duration": 60000,
                        "matrix": true,
                        "step": 120000,
                      },
                      "dist": false,
                      "fmt": undefined,
                      "having_conditions": Conjunction {
                        "args": Array [],
                      },
                      "joins": Array [],
                      "limitbycolumns": undefined,
                      "limits": undefined,
                      "order_expressions": Array [
                        Array [
                          "timestamp_ns",
                          "desc",
                        ],
                        Array [
                          "labels",
                          "desc",
                        ],
                      ],
                      "params": Object {
                        "from": Parameter {
                          "name": "from",
                          "value": null,
                        },
                        "isMatrix": Parameter {
                          "name": "isMatrix",
                          "value": null,
                        },
                        "limit": Parameter {
                          "name": "limit",
                          "value": 2000,
                        },
                        "samplesTable": Parameter {
                          "name": "samplesTable",
                          "value": null,
                        },
                        "timeSeriesTable": Parameter {
                          "name": "timeSeriesTable",
                          "value": null,
                        },
                        "timestamp_shift": Parameter {
                          "name": "timestamp_shift",
                          "value": null,
                        },
                        "to": Parameter {
                          "name": "to",
                          "value": null,
                        },
                      },
                      "preconditions": Conjunction {
                        "args": Array [],
                      },
                      "request_totals": undefined,
                      "sampling": undefined,
                      "select_list": Array [
                        Array [
                          "samples.labels",
                          "labels",
                        ],
                        Array [
                          "samples.string",
                          "string",
                        ],
                        Array [
                          "samples.fingerprint",
                          "fingerprint",
                        ],
                        Array [
                          Raw {
                            "raw": "",
                            "toString": [Function],
                          },
                          "timestamp_ns",
                        ],
                        Array [
                          Raw {
                            "raw": "arrayFilter((x) -> x.2 != '', [('int_lbl2', if(JSONType(samples.string, 'int_val') == 'String', JSONExtractString(samples.string, 'int_val'), JSONExtractRaw(samples.string, 'int_val')))])",
                          },
                          "extra_labels",
                        ],
                        Array [
                          Raw {
                            "raw": "toFloat64OrNull(if(arrayExists(x -> x.1 == 'int_lbl2', extra_labels), arrayFirst(x -> x.1 == 'int_lbl2', extra_labels).2, arrayFirst(x -> x.1 == 'int_lbl2', labels).2))",
                          },
                          "unwrapped",
                        ],
                      ],
                      "tables": Array [
                        Array [
                          Parameter {
                            "name": "samplesTable",
                            "value": null,
                          },
                          Term {
                            "term": "samples",
                          },
                        ],
                      ],
                      "withs": Object {},
                    },
                  },
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "539362417599242.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "test_id",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "0.7857680014573265_json",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "539362417599242",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "uw_rate_a": With {
      "alias": "uw_rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "isValidJSON(samples.string)",
              },
              "operator": "=",
              "value": Value {
                "value": 1,
              },
            },
            Condition {
              "column": Disjunction {
                "args": Array [
                  Condition {
                    "column": Raw {
                      "raw": "arrayFirstIndex(x -> x.1 == 'int_lbl2', extra_labels)",
                    },
                    "operator": "!=",
                    "value": Value {
                      "value": 0,
                    },
                  },
                  Condition {
                    "column": Raw {
                      "raw": "arrayExists(x -> x.1 == 'int_lbl2', labels)",
                    },
                    "operator": "=",
                    "value": Value {
                      "value": 1,
                    },
                  },
                ],
              },
              "operator": "=",
              "value": Condition {
                "column": Raw {
                  "raw": "isNotNull(unwrapped)",
                },
                "operator": "=",
                "value": Value {
                  "value": 1,
                },
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 60000,
          "matrix": true,
          "step": 120000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": null,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 2000,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": null,
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": null,
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": null,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "arrayFilter((x) -> x.2 != '', [('int_lbl2', if(JSONType(samples.string, 'int_val') == 'String', JSONExtractString(samples.string, 'int_val'), JSONExtractRaw(samples.string, 'int_val')))])",
            },
            "extra_labels",
          ],
          Array [
            Raw {
              "raw": "toFloat64OrNull(if(arrayExists(x -> x.1 == 'int_lbl2', extra_labels), arrayFirst(x -> x.1 == 'int_lbl2', extra_labels).2, arrayFirst(x -> x.1 == 'int_lbl2', labels).2))",
            },
            "unwrapped",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": null,
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "uw_rate_b": With {
      "alias": "uw_rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          "labels",
          "timestamp_ns",
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "arraySort(arrayFilter(x -> arrayExists(y -> x.1 == y, ['fmt']) != 0, arraySort(arrayConcat(arrayFilter(x -> arrayExists(y -> y.1 == x.1, extra_labels) == 0, labels), extra_labels))))",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "SUM(unwrapped) / 60",
            },
            "value",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "uw_rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "isValidJSON(samples.string)",
                        },
                        "operator": "=",
                        "value": Value {
                          "value": 1,
                        },
                      },
                      Condition {
                        "column": Disjunction {
                          "args": Array [
                            Condition {
                              "column": Raw {
                                "raw": "arrayFirstIndex(x -> x.1 == 'int_lbl2', extra_labels)",
                              },
                              "operator": "!=",
                              "value": Value {
                                "value": 0,
                              },
                            },
                            Condition {
                              "column": Raw {
                                "raw": "arrayExists(x -> x.1 == 'int_lbl2', labels)",
                              },
                              "operator": "=",
                              "value": Value {
                                "value": 1,
                              },
                            },
                          ],
                        },
                        "operator": "=",
                        "value": Condition {
                          "column": Raw {
                            "raw": "isNotNull(unwrapped)",
                          },
                          "operator": "=",
                          "value": Value {
                            "value": 1,
                          },
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 60000,
                    "matrix": true,
                    "step": 120000,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": null,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 2000,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": null,
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": null,
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": null,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                    Array [
                      Raw {
                        "raw": "arrayFilter((x) -> x.2 != '', [('int_lbl2', if(JSONType(samples.string, 'int_val') == 'String', JSONExtractString(samples.string, 'int_val'), JSONExtractRaw(samples.string, 'int_val')))])",
                      },
                      "extra_labels",
                    ],
                    Array [
                      Raw {
                        "raw": "toFloat64OrNull(if(arrayExists(x -> x.1 == 'int_lbl2', extra_labels), arrayFirst(x -> x.1 == 'int_lbl2', extra_labels).2, arrayFirst(x -> x.1 == 'int_lbl2', labels).2))",
                      },
                      "unwrapped",
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": null,
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`shoud transpile unwrap 3`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 60000,
    "matrix": true,
    "step": 120000,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    Array [
      "labels",
      "asc",
    ],
    Array [
      "timestamp_ns",
      "asc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": null,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 2000,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": null,
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": null,
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": null,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    "labels",
    Array [
      Raw {
        "raw": "intDiv(timestamp_ns, 120000) * 120000",
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "argMin(uw_rate_b.value, uw_rate_b.timestamp_ns)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "uw_rate_b",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [
              "labels",
              "timestamp_ns",
            ],
            "conditions": Conjunction {
              "args": Array [],
            },
            "ctx": Object {},
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              "labels",
              "timestamp_ns",
            ],
            "params": Object {},
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              Array [
                Raw {
                  "raw": "arraySort(arrayFilter(x -> arrayExists(y -> x.1 == y, ['int_lbl2']) != 0, arraySort(arrayConcat(arrayFilter(x -> arrayExists(y -> y.1 == x.1, extra_labels) == 0, labels), extra_labels))))",
                },
                "labels",
              ],
              Array [
                Raw {
                  "raw": "SUM(unwrapped) / 60",
                },
                "value",
              ],
              Array [
                Raw {
                  "raw": "",
                  "toString": [Function],
                },
                "timestamp_ns",
              ],
            ],
            "tables": Array [
              Array [
                WithReference {
                  "ref": With {
                    "alias": "uw_rate_a",
                    "inline": undefined,
                    "query": Select {
                      "aggregations": Array [],
                      "conditions": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Raw {
                              "raw": "",
                              "toString": [Function],
                            },
                            "operator": undefined,
                            "value": Value {
                              "value": undefined,
                            },
                          },
                          Condition {
                            "column": Raw {
                              "raw": "samples.fingerprint IN idx_sel",
                            },
                            "operator": undefined,
                            "value": Value {
                              "value": undefined,
                            },
                          },
                          Condition {
                            "column": Raw {
                              "raw": "isValidJSON(samples.string)",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 1,
                            },
                          },
                          Condition {
                            "column": Disjunction {
                              "args": Array [
                                Condition {
                                  "column": Raw {
                                    "raw": "arrayFirstIndex(x -> x.1 == 'int_lbl', extra_labels)",
                                  },
                                  "operator": "!=",
                                  "value": Value {
                                    "value": 0,
                                  },
                                },
                                Condition {
                                  "column": Raw {
                                    "raw": "arrayExists(x -> x.1 == 'int_lbl', labels)",
                                  },
                                  "operator": "=",
                                  "value": Value {
                                    "value": 1,
                                  },
                                },
                              ],
                            },
                            "operator": "=",
                            "value": Condition {
                              "column": Raw {
                                "raw": "isNotNull(unwrapped)",
                              },
                              "operator": "=",
                              "value": Value {
                                "value": 1,
                              },
                            },
                          },
                        ],
                      },
                      "ctx": Object {
                        "duration": 60000,
                        "matrix": true,
                        "step": 120000,
                      },
                      "dist": false,
                      "fmt": undefined,
                      "having_conditions": Conjunction {
                        "args": Array [],
                      },
                      "joins": Array [],
                      "limitbycolumns": undefined,
                      "limits": undefined,
                      "order_expressions": Array [
                        Array [
                          "timestamp_ns",
                          "desc",
                        ],
                        Array [
                          "labels",
                          "desc",
                        ],
                      ],
                      "params": Object {
                        "from": Parameter {
                          "name": "from",
                          "value": null,
                        },
                        "isMatrix": Parameter {
                          "name": "isMatrix",
                          "value": null,
                        },
                        "limit": Parameter {
                          "name": "limit",
                          "value": 2000,
                        },
                        "samplesTable": Parameter {
                          "name": "samplesTable",
                          "value": null,
                        },
                        "timeSeriesTable": Parameter {
                          "name": "timeSeriesTable",
                          "value": null,
                        },
                        "timestamp_shift": Parameter {
                          "name": "timestamp_shift",
                          "value": null,
                        },
                        "to": Parameter {
                          "name": "to",
                          "value": null,
                        },
                      },
                      "preconditions": Conjunction {
                        "args": Array [],
                      },
                      "request_totals": undefined,
                      "sampling": undefined,
                      "select_list": Array [
                        Array [
                          "samples.labels",
                          "labels",
                        ],
                        Array [
                          "samples.string",
                          "string",
                        ],
                        Array [
                          "samples.fingerprint",
                          "fingerprint",
                        ],
                        Array [
                          Raw {
                            "raw": "",
                            "toString": [Function],
                          },
                          "timestamp_ns",
                        ],
                        Array [
                          Raw {
                            "raw": "arrayFilter((x) -> x.2 != '', [('int_lbl2', if(JSONType(samples.string, 'int_val') == 'String', JSONExtractString(samples.string, 'int_val'), JSONExtractRaw(samples.string, 'int_val')))])",
                          },
                          "extra_labels",
                        ],
                        Array [
                          Raw {
                            "raw": "toFloat64OrNull(if(arrayExists(x -> x.1 == 'int_lbl', extra_labels), arrayFirst(x -> x.1 == 'int_lbl', extra_labels).2, arrayFirst(x -> x.1 == 'int_lbl', labels).2))",
                          },
                          "unwrapped",
                        ],
                      ],
                      "tables": Array [
                        Array [
                          Parameter {
                            "name": "samplesTable",
                            "value": null,
                          },
                          Term {
                            "term": "samples",
                          },
                        ],
                      ],
                      "withs": Object {},
                    },
                  },
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "8913008403474094.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "test_id",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "0.7857680014573265_json",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "8913008403474094",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "uw_rate_a": With {
      "alias": "uw_rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "isValidJSON(samples.string)",
              },
              "operator": "=",
              "value": Value {
                "value": 1,
              },
            },
            Condition {
              "column": Disjunction {
                "args": Array [
                  Condition {
                    "column": Raw {
                      "raw": "arrayFirstIndex(x -> x.1 == 'int_lbl', extra_labels)",
                    },
                    "operator": "!=",
                    "value": Value {
                      "value": 0,
                    },
                  },
                  Condition {
                    "column": Raw {
                      "raw": "arrayExists(x -> x.1 == 'int_lbl', labels)",
                    },
                    "operator": "=",
                    "value": Value {
                      "value": 1,
                    },
                  },
                ],
              },
              "operator": "=",
              "value": Condition {
                "column": Raw {
                  "raw": "isNotNull(unwrapped)",
                },
                "operator": "=",
                "value": Value {
                  "value": 1,
                },
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 60000,
          "matrix": true,
          "step": 120000,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": null,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 2000,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": null,
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": null,
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": null,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "arrayFilter((x) -> x.2 != '', [('int_lbl2', if(JSONType(samples.string, 'int_val') == 'String', JSONExtractString(samples.string, 'int_val'), JSONExtractRaw(samples.string, 'int_val')))])",
            },
            "extra_labels",
          ],
          Array [
            Raw {
              "raw": "toFloat64OrNull(if(arrayExists(x -> x.1 == 'int_lbl', extra_labels), arrayFirst(x -> x.1 == 'int_lbl', extra_labels).2, arrayFirst(x -> x.1 == 'int_lbl', labels).2))",
            },
            "unwrapped",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": null,
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "uw_rate_b": With {
      "alias": "uw_rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          "labels",
          "timestamp_ns",
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "arraySort(arrayFilter(x -> arrayExists(y -> x.1 == y, ['int_lbl2']) != 0, arraySort(arrayConcat(arrayFilter(x -> arrayExists(y -> y.1 == x.1, extra_labels) == 0, labels), extra_labels))))",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "SUM(unwrapped) / 60",
            },
            "value",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "uw_rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "isValidJSON(samples.string)",
                        },
                        "operator": "=",
                        "value": Value {
                          "value": 1,
                        },
                      },
                      Condition {
                        "column": Disjunction {
                          "args": Array [
                            Condition {
                              "column": Raw {
                                "raw": "arrayFirstIndex(x -> x.1 == 'int_lbl', extra_labels)",
                              },
                              "operator": "!=",
                              "value": Value {
                                "value": 0,
                              },
                            },
                            Condition {
                              "column": Raw {
                                "raw": "arrayExists(x -> x.1 == 'int_lbl', labels)",
                              },
                              "operator": "=",
                              "value": Value {
                                "value": 1,
                              },
                            },
                          ],
                        },
                        "operator": "=",
                        "value": Condition {
                          "column": Raw {
                            "raw": "isNotNull(unwrapped)",
                          },
                          "operator": "=",
                          "value": Value {
                            "value": 1,
                          },
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 60000,
                    "matrix": true,
                    "step": 120000,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": null,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 2000,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": null,
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": null,
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": null,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                    Array [
                      Raw {
                        "raw": "arrayFilter((x) -> x.2 != '', [('int_lbl2', if(JSONType(samples.string, 'int_val') == 'String', JSONExtractString(samples.string, 'int_val'), JSONExtractRaw(samples.string, 'int_val')))])",
                      },
                      "extra_labels",
                    ],
                    Array [
                      Raw {
                        "raw": "toFloat64OrNull(if(arrayExists(x -> x.1 == 'int_lbl', extra_labels), arrayFirst(x -> x.1 == 'int_lbl', extra_labels).2, arrayFirst(x -> x.1 == 'int_lbl', labels).2))",
                      },
                      "unwrapped",
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": null,
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile aggregation_operator 1`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 300000,
    "end": 3600000,
    "matrix": true,
    "start": 0,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    "labels",
    "timestamp_ns",
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      Raw {
        "raw": "arrayFilter(x -> x.1 IN ('label_1'), labels)",
      },
      "labels",
    ],
    "timestamp_ns",
    Array [
      Raw {
        "raw": "sum(value)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "agg_a",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [
              "labels",
              "timestamp_ns",
            ],
            "conditions": Conjunction {
              "args": Array [],
            },
            "ctx": Object {
              "duration": 300000,
              "end": 3600000,
              "matrix": true,
              "start": 0,
            },
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              Array [
                "labels",
                "asc",
              ],
              Array [
                "timestamp_ns",
                "asc",
              ],
            ],
            "params": Object {
              "from": Parameter {
                "name": "from",
                "value": 1,
              },
              "isMatrix": Parameter {
                "name": "isMatrix",
                "value": null,
              },
              "limit": Parameter {
                "name": "limit",
                "value": 3,
              },
              "samplesTable": Parameter {
                "name": "samplesTable",
                "value": "loki.samples_read",
              },
              "timeSeriesTable": Parameter {
                "name": "timeSeriesTable",
                "value": "loki.time_series",
              },
              "timestamp_shift": Parameter {
                "name": "timestamp_shift",
                "value": null,
              },
              "to": Parameter {
                "name": "to",
                "value": 2,
              },
            },
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              "labels",
              Array [
                Raw {
                  "raw": "intDiv(timestamp_ns, undefined) * undefined",
                },
                "timestamp_ns",
              ],
              Array [
                Raw {
                  "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
                },
                "value",
              ],
            ],
            "tables": Array [
              Array [
                Term {
                  "term": "rate_b",
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "agg_a": With {
      "alias": "agg_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {
          "duration": 300000,
          "end": 3600000,
          "matrix": true,
          "start": 0,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "labels",
          Array [
            Raw {
              "raw": "intDiv(timestamp_ns, undefined) * undefined",
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            Term {
              "term": "rate_b",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "07955134266021435.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "minus_nam",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "aut illo",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "07955134266021435",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 300000,
          "end": 3600000,
          "matrix": true,
          "start": 0,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_b": With {
      "alias": "rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "labels",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "toFloat64(count(1)) * 1000 / 300000",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 300000,
                    "end": 3600000,
                    "matrix": true,
                    "start": 0,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": 1,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 3,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": "loki.samples_read",
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": "loki.time_series",
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": 2,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": "loki.samples_read",
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile aggregation_operator 2`] = `"WITH idx_sel AS (select \`07955134266021435\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'minus_nam') and (\`val\` = 'aut illo'))) as \`07955134266021435\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc), rate_b AS (select labels as \`labels\`,intDiv(timestamp_ns, 300000) * 300000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 300000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc), agg_a AS (select \`labels\`,intDiv(timestamp_ns, undefined) * undefined as \`timestamp_ns\`,argMin(rate_b.value, rate_b.timestamp_ns) as \`value\` from \`rate_b\` group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc) select arrayFilter(x -> x.1 IN ('label_1'), labels) as \`labels\`,\`timestamp_ns\`,sum(value) as \`value\` from agg_a group by \`labels\`,\`timestamp_ns\` order by \`labels\`,\`timestamp_ns\`"`;

exports[`should transpile aggregation_operator 3`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 300000,
    "end": 3600000,
    "matrix": true,
    "start": 0,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    "labels",
    "timestamp_ns",
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      Raw {
        "raw": "arrayFilter(x -> x.1 IN ('label_1'), labels)",
      },
      "labels",
    ],
    "timestamp_ns",
    Array [
      Raw {
        "raw": "sum(value)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "agg_a",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [
              "labels",
              "timestamp_ns",
            ],
            "conditions": Conjunction {
              "args": Array [],
            },
            "ctx": Object {
              "duration": 300000,
              "end": 3600000,
              "matrix": true,
              "start": 0,
            },
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              Array [
                "labels",
                "asc",
              ],
              Array [
                "timestamp_ns",
                "asc",
              ],
            ],
            "params": Object {
              "from": Parameter {
                "name": "from",
                "value": 1,
              },
              "isMatrix": Parameter {
                "name": "isMatrix",
                "value": null,
              },
              "limit": Parameter {
                "name": "limit",
                "value": 3,
              },
              "samplesTable": Parameter {
                "name": "samplesTable",
                "value": "loki.samples_read",
              },
              "timeSeriesTable": Parameter {
                "name": "timeSeriesTable",
                "value": "loki.time_series",
              },
              "timestamp_shift": Parameter {
                "name": "timestamp_shift",
                "value": null,
              },
              "to": Parameter {
                "name": "to",
                "value": 2,
              },
            },
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              "labels",
              Array [
                Raw {
                  "raw": "intDiv(timestamp_ns, undefined) * undefined",
                },
                "timestamp_ns",
              ],
              Array [
                Raw {
                  "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
                },
                "value",
              ],
            ],
            "tables": Array [
              Array [
                Term {
                  "term": "rate_b",
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "agg_a": With {
      "alias": "agg_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {
          "duration": 300000,
          "end": 3600000,
          "matrix": true,
          "start": 0,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "labels",
          Array [
            Raw {
              "raw": "intDiv(timestamp_ns, undefined) * undefined",
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            Term {
              "term": "rate_b",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "6110931787692697.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 1,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "6110931787692697",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "position(string, 'consequatur nam soluta')",
              },
              "operator": "=",
              "value": Value {
                "value": 0,
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 300000,
          "end": 3600000,
          "matrix": true,
          "start": 0,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_b": With {
      "alias": "rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "labels",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "toFloat64(count(1)) * 1000 / 300000",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "position(string, 'consequatur nam soluta')",
                        },
                        "operator": "=",
                        "value": Value {
                          "value": 0,
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 300000,
                    "end": 3600000,
                    "matrix": true,
                    "start": 0,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": 1,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 3,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": "loki.samples_read",
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": "loki.time_series",
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": 2,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": "loki.samples_read",
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile aggregation_operator 4`] = `"WITH idx_sel AS (select \`6110931787692697\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 1))) as \`6110931787692697\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (samples.fingerprint IN idx_sel) and (position(string, 'consequatur nam soluta') = 0) order by \`timestamp_ns\` desc,\`labels\` desc), rate_b AS (select labels as \`labels\`,intDiv(timestamp_ns, 300000) * 300000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 300000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc), agg_a AS (select \`labels\`,intDiv(timestamp_ns, undefined) * undefined as \`timestamp_ns\`,argMin(rate_b.value, rate_b.timestamp_ns) as \`value\` from \`rate_b\` group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc) select arrayFilter(x -> x.1 IN ('label_1'), labels) as \`labels\`,\`timestamp_ns\`,sum(value) as \`value\` from agg_a group by \`labels\`,\`timestamp_ns\` order by \`labels\`,\`timestamp_ns\`"`;

exports[`should transpile aggregation_operator 5`] = `
Select {
  "aggregations": Array [
    "labels",
    "timestamp_ns",
  ],
  "conditions": Conjunction {
    "args": Array [],
  },
  "ctx": Object {
    "duration": 300000,
    "end": 3600000,
    "matrix": true,
    "start": 0,
  },
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": undefined,
  "order_expressions": Array [
    "labels",
    "timestamp_ns",
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "timestamp_shift": Parameter {
      "name": "timestamp_shift",
      "value": null,
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      Raw {
        "raw": "arrayFilter(x -> x.1 IN ('label_1'), labels)",
      },
      "labels",
    ],
    "timestamp_ns",
    Array [
      Raw {
        "raw": "sum(value)",
      },
      "value",
    ],
  ],
  "tables": Array [
    Array [
      WithReference {
        "ref": With {
          "alias": "agg_a",
          "inline": undefined,
          "query": Select {
            "aggregations": Array [
              "labels",
              "timestamp_ns",
            ],
            "conditions": Conjunction {
              "args": Array [],
            },
            "ctx": Object {
              "duration": 300000,
              "end": 3600000,
              "matrix": true,
              "start": 0,
            },
            "dist": false,
            "fmt": undefined,
            "having_conditions": Conjunction {
              "args": Array [],
            },
            "joins": Array [],
            "limitbycolumns": undefined,
            "limits": undefined,
            "order_expressions": Array [
              Array [
                "labels",
                "asc",
              ],
              Array [
                "timestamp_ns",
                "asc",
              ],
            ],
            "params": Object {
              "from": Parameter {
                "name": "from",
                "value": 1,
              },
              "isMatrix": Parameter {
                "name": "isMatrix",
                "value": null,
              },
              "limit": Parameter {
                "name": "limit",
                "value": 3,
              },
              "samplesTable": Parameter {
                "name": "samplesTable",
                "value": "loki.samples_read",
              },
              "timeSeriesTable": Parameter {
                "name": "timeSeriesTable",
                "value": "loki.time_series",
              },
              "timestamp_shift": Parameter {
                "name": "timestamp_shift",
                "value": null,
              },
              "to": Parameter {
                "name": "to",
                "value": 2,
              },
            },
            "preconditions": Conjunction {
              "args": Array [],
            },
            "request_totals": undefined,
            "sampling": undefined,
            "select_list": Array [
              "labels",
              Array [
                Raw {
                  "raw": "intDiv(timestamp_ns, undefined) * undefined",
                },
                "timestamp_ns",
              ],
              Array [
                Raw {
                  "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
                },
                "value",
              ],
            ],
            "tables": Array [
              Array [
                Term {
                  "term": "rate_b",
                },
              ],
            ],
            "withs": Object {},
          },
        },
      },
    ],
  ],
  "withs": Object {
    "agg_a": With {
      "alias": "agg_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {
          "duration": 300000,
          "end": 3600000,
          "matrix": true,
          "start": 0,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "labels",
          Array [
            Raw {
              "raw": "intDiv(timestamp_ns, undefined) * undefined",
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "argMin(rate_b.value, rate_b.timestamp_ns)",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            Term {
              "term": "rate_b",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "5936746745550483.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "minus_nam",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "aut illo",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "5936746745550483",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_a": With {
      "alias": "rate_a",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [
            Condition {
              "column": Raw {
                "raw": "",
                "toString": [Function],
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
            Condition {
              "column": Raw {
                "raw": "samples.fingerprint IN idx_sel",
              },
              "operator": undefined,
              "value": Value {
                "value": undefined,
              },
            },
          ],
        },
        "ctx": Object {
          "duration": 300000,
          "end": 3600000,
          "matrix": true,
          "start": 0,
        },
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "timestamp_ns",
            "desc",
          ],
          Array [
            "labels",
            "desc",
          ],
        ],
        "params": Object {
          "from": Parameter {
            "name": "from",
            "value": 1,
          },
          "isMatrix": Parameter {
            "name": "isMatrix",
            "value": null,
          },
          "limit": Parameter {
            "name": "limit",
            "value": 3,
          },
          "samplesTable": Parameter {
            "name": "samplesTable",
            "value": "loki.samples_read",
          },
          "timeSeriesTable": Parameter {
            "name": "timeSeriesTable",
            "value": "loki.time_series",
          },
          "timestamp_shift": Parameter {
            "name": "timestamp_shift",
            "value": null,
          },
          "to": Parameter {
            "name": "to",
            "value": 2,
          },
        },
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            "samples.labels",
            "labels",
          ],
          Array [
            "samples.string",
            "string",
          ],
          Array [
            "samples.fingerprint",
            "fingerprint",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
        ],
        "tables": Array [
          Array [
            Parameter {
              "name": "samplesTable",
              "value": "loki.samples_read",
            },
            Term {
              "term": "samples",
            },
          ],
        ],
        "withs": Object {},
      },
    },
    "rate_b": With {
      "alias": "rate_b",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [
          "labels",
          "timestamp_ns",
        ],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [
          Array [
            "labels",
            "asc",
          ],
          Array [
            "timestamp_ns",
            "asc",
          ],
        ],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          Array [
            Raw {
              "raw": "labels",
            },
            "labels",
          ],
          Array [
            Raw {
              "raw": "",
              "toString": [Function],
            },
            "timestamp_ns",
          ],
          Array [
            Raw {
              "raw": "toFloat64(count(1)) * 1000 / 300000",
            },
            "value",
          ],
        ],
        "tables": Array [
          Array [
            WithReference {
              "ref": With {
                "alias": "rate_a",
                "inline": undefined,
                "query": Select {
                  "aggregations": Array [],
                  "conditions": Conjunction {
                    "args": Array [
                      Condition {
                        "column": Raw {
                          "raw": "",
                          "toString": [Function],
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                      Condition {
                        "column": Raw {
                          "raw": "samples.fingerprint IN idx_sel",
                        },
                        "operator": undefined,
                        "value": Value {
                          "value": undefined,
                        },
                      },
                    ],
                  },
                  "ctx": Object {
                    "duration": 300000,
                    "end": 3600000,
                    "matrix": true,
                    "start": 0,
                  },
                  "dist": false,
                  "fmt": undefined,
                  "having_conditions": Conjunction {
                    "args": Array [],
                  },
                  "joins": Array [],
                  "limitbycolumns": undefined,
                  "limits": undefined,
                  "order_expressions": Array [
                    Array [
                      "timestamp_ns",
                      "desc",
                    ],
                    Array [
                      "labels",
                      "desc",
                    ],
                  ],
                  "params": Object {
                    "from": Parameter {
                      "name": "from",
                      "value": 1,
                    },
                    "isMatrix": Parameter {
                      "name": "isMatrix",
                      "value": null,
                    },
                    "limit": Parameter {
                      "name": "limit",
                      "value": 3,
                    },
                    "samplesTable": Parameter {
                      "name": "samplesTable",
                      "value": "loki.samples_read",
                    },
                    "timeSeriesTable": Parameter {
                      "name": "timeSeriesTable",
                      "value": "loki.time_series",
                    },
                    "timestamp_shift": Parameter {
                      "name": "timestamp_shift",
                      "value": null,
                    },
                    "to": Parameter {
                      "name": "to",
                      "value": 2,
                    },
                  },
                  "preconditions": Conjunction {
                    "args": Array [],
                  },
                  "request_totals": undefined,
                  "sampling": undefined,
                  "select_list": Array [
                    Array [
                      "samples.labels",
                      "labels",
                    ],
                    Array [
                      "samples.string",
                      "string",
                    ],
                    Array [
                      "samples.fingerprint",
                      "fingerprint",
                    ],
                    Array [
                      Raw {
                        "raw": "",
                        "toString": [Function],
                      },
                      "timestamp_ns",
                    ],
                  ],
                  "tables": Array [
                    Array [
                      Parameter {
                        "name": "samplesTable",
                        "value": "loki.samples_read",
                      },
                      Term {
                        "term": "samples",
                      },
                    ],
                  ],
                  "withs": Object {},
                },
              },
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile aggregation_operator 6`] = `"WITH idx_sel AS (select \`5936746745550483\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'minus_nam') and (\`val\` = 'aut illo'))) as \`5936746745550483\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc), rate_b AS (select labels as \`labels\`,intDiv(timestamp_ns, 300000) * 300000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 300000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc), agg_a AS (select \`labels\`,intDiv(timestamp_ns, undefined) * undefined as \`timestamp_ns\`,argMin(rate_b.value, rate_b.timestamp_ns) as \`value\` from \`rate_b\` group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc) select arrayFilter(x -> x.1 IN ('label_1'), labels) as \`labels\`,\`timestamp_ns\`,sum(value) as \`value\` from agg_a group by \`labels\`,\`timestamp_ns\` order by \`labels\`,\`timestamp_ns\`"`;

exports[`should transpile complex pipelines 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`77340757019202\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '\${testID}'))) as \`77340757019202\`), str_sel AS (select DISTINCT \`fingerprint\` from loki.time_series where (fingerprint IN idx_sel) and ((JSONHas(labels, 'freq') = 1) and (toFloat64OrNull(JSONExtractString(labels, 'freq')) >= '4'))), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 0000000 and 100000000000000) and (samples.fingerprint IN idx_sel) and (\`samples\`.\`fingerprint\` in (select \`fingerprint\` from str_sel)) order by \`timestamp_ns\` asc,\`labels\` asc limit 1000) select * from sel_a order by \`labels\` asc,\`timestamp_ns\` asc",
  "stream": Array [],
}
`;

exports[`should transpile json requests 1`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "isValidJSON(samples.string)",
        },
        "operator": "=",
        "value": Value {
          "value": 1,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
    Array [
      Raw {
        "raw": "arrayFilter((x) -> x.2 != '', [('odit_iusto', if(JSONType(samples.string, 'dicta') == 'String', JSONExtractString(samples.string, 'dicta'), JSONExtractRaw(samples.string, 'dicta')))])",
      },
      "extra_labels",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "09996093162867026.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "autem_quis",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "quidem sit",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "09996093162867026",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile json requests 2`] = `
Array [
  Object {
    "labels": Object {
      "autem_quis": "quidem sit",
      "l1": "v3",
      "l2": "v2",
      "l3": "v4",
    },
    "string": "{\\"l1\\":\\"v3\\",\\"l3\\":\\"v4\\"}",
  },
]
`;

exports[`should transpile line format 1`] = `
Array [
  Object {
    "labels": Object {
      "int": 10,
      "lbl1": "a",
    },
    "string": "str a 5",
  },
]
`;

exports[`should transpile line format 2`] = `
Array [
  Object {
    "labels": Object {
      "entry": "str",
      "int": 10,
      "intval": "5",
      "lbl1": "a",
    },
    "string": "{ \\"entry\\": \\"str\\", \\"intval\\": 5 }",
  },
]
`;

exports[`should transpile line format 3`] = `
Array [
  Object {
    "labels": Object {
      "entry": "str",
      "int": 10,
      "intval": "5",
      "lbl1": "a",
    },
    "timestamp_ns": "0",
    "value": 5,
  },
  Object {
    "EOF": true,
  },
]
`;

exports[`should transpile log_stream_selector 1`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [
          Object {
            "conditions": Array [
              Condition {
                "column": Term {
                  "term": "5746970777490998.fingerprint",
                },
                "operator": "=",
                "value": Term {
                  "term": "28460869635791464.fingerprint",
                },
              },
            ],
            "table": AliasedSelect {
              "alias": Term {
                "term": "28460869635791464",
              },
              "sel": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "quia",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "eum voluptatem non eligendi",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            "type": " inner any ",
          },
        ],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "5746970777490998.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "et_dolorem",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "nemo doloremque",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "5746970777490998",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector 2`] = `"WITH idx_sel AS (select \`5746970777490998\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'et_dolorem') and (\`val\` = 'nemo doloremque'))) as \`5746970777490998\`  inner any  join (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'quia') and (\`val\` = 'eum voluptatem non eligendi'))) as \`28460869635791464\` on \`5746970777490998\`.\`fingerprint\` = \`28460869635791464\`.\`fingerprint\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector 3`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "08204898925396953.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 1,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "08204898925396953",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector 4`] = `"WITH idx_sel AS (select \`08204898925396953\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 1))) as \`08204898925396953\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector 5`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "936685525854994.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "et_dolorem",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "!=",
                            "value": Value {
                              "value": "nemo doloremque",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "936685525854994",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector 6`] = `"WITH idx_sel AS (select \`936685525854994\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'et_dolorem') and (\`val\` != 'nemo doloremque'))) as \`936685525854994\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector 7`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "5937073739314618.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 0,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "5937073739314618",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector 8`] = `"WITH idx_sel AS (select \`5937073739314618\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 0))) as \`5937073739314618\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector with stream filter 1`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "position(string, 'at et')",
        },
        "operator": "!=",
        "value": Value {
          "value": 0,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [
          Object {
            "conditions": Array [
              Condition {
                "column": Term {
                  "term": "5204989896319352.fingerprint",
                },
                "operator": "=",
                "value": Term {
                  "term": "115869529276029.fingerprint",
                },
              },
            ],
            "table": AliasedSelect {
              "alias": Term {
                "term": "115869529276029",
              },
              "sel": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "quia",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "eum voluptatem non eligendi",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            "type": " inner any ",
          },
        ],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "5204989896319352.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "et_dolorem",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "nemo doloremque",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "5204989896319352",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector with stream filter 2`] = `"WITH idx_sel AS (select \`5204989896319352\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'et_dolorem') and (\`val\` = 'nemo doloremque'))) as \`5204989896319352\`  inner any  join (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'quia') and (\`val\` = 'eum voluptatem non eligendi'))) as \`115869529276029\` on \`5204989896319352\`.\`fingerprint\` = \`115869529276029\`.\`fingerprint\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (position(string, 'at et') != 0) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector with stream filter 3`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "position(string, 'consequatur nam soluta')",
        },
        "operator": "=",
        "value": Value {
          "value": 0,
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "3229572522610924.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 1,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "3229572522610924",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector with stream filter 4`] = `"WITH idx_sel AS (select \`3229572522610924\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 1))) as \`3229572522610924\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (position(string, 'consequatur nam soluta') = 0) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector with stream filter 5`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "extractAllGroups(string, '(^mol[eE][^ ]+e +voluptatibus)')",
        },
        "operator": "!=",
        "value": Raw {
          "raw": "[]",
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "8339135174165844.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "et_dolorem",
                            },
                          },
                          Condition {
                            "column": Term {
                              "term": "val",
                            },
                            "operator": "!=",
                            "value": Value {
                              "value": "nemo doloremque",
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "8339135174165844",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector with stream filter 6`] = `"WITH idx_sel AS (select \`8339135174165844\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'et_dolorem') and (\`val\` != 'nemo doloremque'))) as \`8339135174165844\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(^mol[eE][^ ]+e +voluptatibus)') != []) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile log_stream_selector with stream filter 7`] = `
Select {
  "aggregations": Array [],
  "conditions": Conjunction {
    "args": Array [
      Condition {
        "column": Raw {
          "raw": "",
          "toString": [Function],
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "samples.fingerprint IN idx_sel",
        },
        "operator": undefined,
        "value": Value {
          "value": undefined,
        },
      },
      Condition {
        "column": Raw {
          "raw": "extractAllGroups(string, '(cons[eE][^ ]+r nam soluta)')",
        },
        "operator": "=",
        "value": Raw {
          "raw": "[]",
        },
      },
    ],
  },
  "ctx": Object {},
  "dist": false,
  "fmt": undefined,
  "having_conditions": Conjunction {
    "args": Array [],
  },
  "joins": Array [],
  "limitbycolumns": undefined,
  "limits": Object {
    "number": Parameter {
      "name": "limit",
      "value": 3,
    },
    "offset": undefined,
  },
  "order_expressions": Array [
    Array [
      "timestamp_ns",
      "desc",
    ],
    Array [
      "labels",
      "desc",
    ],
  ],
  "params": Object {
    "from": Parameter {
      "name": "from",
      "value": 1,
    },
    "isMatrix": Parameter {
      "name": "isMatrix",
      "value": null,
    },
    "limit": Parameter {
      "name": "limit",
      "value": 3,
    },
    "samplesTable": Parameter {
      "name": "samplesTable",
      "value": "loki.samples_read",
    },
    "timeSeriesTable": Parameter {
      "name": "timeSeriesTable",
      "value": "loki.time_series",
    },
    "to": Parameter {
      "name": "to",
      "value": 2,
    },
  },
  "preconditions": Conjunction {
    "args": Array [],
  },
  "request_totals": undefined,
  "sampling": undefined,
  "select_list": Array [
    Array [
      "samples.labels",
      "labels",
    ],
    Array [
      "samples.string",
      "string",
    ],
    Array [
      "samples.fingerprint",
      "fingerprint",
    ],
    Array [
      Raw {
        "raw": "",
        "toString": [Function],
      },
      "timestamp_ns",
    ],
  ],
  "tables": Array [
    Array [
      Parameter {
        "name": "samplesTable",
        "value": "loki.samples_read",
      },
      Term {
        "term": "samples",
      },
    ],
  ],
  "withs": Object {
    "idx_sel": With {
      "alias": "idx_sel",
      "inline": undefined,
      "query": Select {
        "aggregations": Array [],
        "conditions": Conjunction {
          "args": Array [],
        },
        "ctx": Object {},
        "dist": false,
        "fmt": undefined,
        "having_conditions": Conjunction {
          "args": Array [],
        },
        "joins": Array [],
        "limitbycolumns": undefined,
        "limits": undefined,
        "order_expressions": Array [],
        "params": Object {},
        "preconditions": Conjunction {
          "args": Array [],
        },
        "request_totals": undefined,
        "sampling": undefined,
        "select_list": Array [
          "8734229022210214.fingerprint",
        ],
        "tables": Array [
          Array [
            Subquery {
              "query": Select {
                "aggregations": Array [],
                "conditions": Conjunction {
                  "args": Array [
                    Condition {
                      "column": Conjunction {
                        "args": Array [
                          Condition {
                            "column": Term {
                              "term": "key",
                            },
                            "operator": "=",
                            "value": Value {
                              "value": "rerum_laborum",
                            },
                          },
                          Condition {
                            "column": Match {
                              "col": "val",
                              "raw": "",
                              "re": Value {
                                "value": "^con.+q.at[a-z]r",
                              },
                            },
                            "operator": "=",
                            "value": Value {
                              "value": 0,
                            },
                          },
                        ],
                      },
                      "operator": undefined,
                      "value": Value {
                        "value": undefined,
                      },
                    },
                  ],
                },
                "ctx": Object {},
                "dist": false,
                "fmt": undefined,
                "having_conditions": Conjunction {
                  "args": Array [],
                },
                "joins": Array [],
                "limitbycolumns": undefined,
                "limits": undefined,
                "order_expressions": Array [],
                "params": Object {},
                "preconditions": Conjunction {
                  "args": Array [],
                },
                "request_totals": undefined,
                "sampling": undefined,
                "select_list": Array [
                  "fingerprint",
                ],
                "tables": Array [
                  Array [
                    Term {
                      "term": "loki.time_series_gin",
                    },
                  ],
                ],
                "withs": Object {},
              },
            },
            Term {
              "term": "8734229022210214",
            },
          ],
        ],
        "withs": Object {},
      },
    },
  },
}
`;

exports[`should transpile log_stream_selector with stream filter 8`] = `"WITH idx_sel AS (select \`8734229022210214\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'rerum_laborum') and (match(val, '^con.+q.at[a-z]r') = 0))) as \`8734229022210214\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1 and 2) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(cons[eE][^ ]+r nam soluta)') = []) order by \`timestamp_ns\` desc,\`labels\` desc limit 3"`;

exports[`should transpile logfmt requests 1`] = `
Array [
  Object {
    "labels": Object {
      "autem_quis": "quidem sit",
      "l1": "v3",
      "l2": "v2",
      "l3": "v4",
    },
    "string": "l1=\\"v3\\" l3=\\"v4\\" ",
  },
]
`;

exports[`should transpile new style 1 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`4723744981768927\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.7387779420506657'))) as \`4723744981768927\`), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 2000) select * from sel_a order by \`labels\` desc,\`timestamp_ns\` desc",
  "stream": Array [],
}
`;

exports[`should transpile new style 2 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`6713537948705173\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.2119268970232'))) as \`6713537948705173\`  inner any  join (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'freq') and (\`val\` = '2'))) as \`44485171270568213\` on \`6713537948705173\`.\`fingerprint\` = \`44485171270568213\`.\`fingerprint\`), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(2[0-9]$)') != []) order by \`timestamp_ns\` desc,\`labels\` desc limit 2000) select * from sel_a order by \`labels\` desc,\`timestamp_ns\` desc",
  "stream": Array [],
}
`;

exports[`should transpile new style 3 1`] = `
Object {
  "duration": 1000,
  "matrix": true,
  "query": "WITH idx_sel AS (select \`6797463243122837\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.7026038163617259'))) as \`6797463243122837\`  inner any  join (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'freq') and (\`val\` = '2'))) as \`9536252225565258\` on \`6797463243122837\`.\`fingerprint\` = \`9536252225565258\`.\`fingerprint\`), rate_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,intDiv(samples.timestamp_ns, 1000000) as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(2[0-9]$)') != []) order by \`timestamp_ns\` desc,\`labels\` desc), rate_b AS (select labels as \`labels\`,intDiv(timestamp_ns, 1000) * 1000 as \`timestamp_ns\`,toFloat64(count(1)) * 1000 / 1000 as \`value\` from rate_a group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc) select \`labels\`,intDiv(timestamp_ns, 2000) * 2000 as \`timestamp_ns\`,argMin(rate_b.value, rate_b.timestamp_ns) as \`value\` from \`rate_b\` group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc",
  "stream": Array [],
}
`;

exports[`should transpile new style 4 1`] = `
Object {
  "duration": 1000,
  "matrix": true,
  "query": "WITH idx_sel AS (select \`9234828605738199\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.7026038163617259'))) as \`9234828605738199\`  inner any  join (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'freq') and (\`val\` = '2'))) as \`5454316827980534\` on \`9234828605738199\`.\`fingerprint\` = \`5454316827980534\`.\`fingerprint\`) select \`labels\`,toUInt64(intDiv(timestamp_ns, 1000000000) * 1000) as \`timestamp_ns\`,toFloat64(0) as \`value\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) and (extractAllGroups(string, '(2[0-9]$)') != []) group by \`labels\`,\`timestamp_ns\` order by \`labels\` asc,\`timestamp_ns\` asc",
  "stream": Array [
    [Function],
  ],
}
`;

exports[`should transpile new style 5 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`9722076203517864\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.000341166036469831_json'))) as \`9722076203517864\`), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 2000) select * from sel_a order by \`labels\` desc,\`timestamp_ns\` desc",
  "stream": Array [
    [Function],
  ],
}
`;

exports[`should transpile new style 6 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`6910909133304983\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.2053747382122484_json'))) as \`6910909133304983\`), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\`,arrayFilter((x) -> x.2 != '', [('lbl_repl', if(JSONType(samples.string, 'new_lbl') == 'String', JSONExtractString(samples.string, 'new_lbl'), JSONExtractRaw(samples.string, 'new_lbl')))]) as \`extra_labels\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) and (isValidJSON(samples.string) = 1) and ((indexOf(extra_labels, ('lbl_repl', 'new_val')) > 0) or ((arrayExists(x -> x.1 == 'lbl_repl', extra_labels) = 0) and ((arrayExists(x -> x.1 == 'lbl_repl', labels) = 1) and (arrayFirst(x -> x.1 == 'lbl_repl', labels).2 = 'new_val')))) order by \`timestamp_ns\` desc,\`labels\` desc limit 2000) select * from sel_a order by \`labels\` desc,\`timestamp_ns\` desc",
  "stream": Array [],
}
`;

exports[`should transpile new style 7 1`] = `
Object {
  "duration": 3000,
  "matrix": true,
  "query": "WITH idx_sel AS (select \`22149127010617375\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.1547558751138609_json'))) as \`22149127010617375\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,intDiv(samples.timestamp_ns, 1000000) as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc",
  "stream": Array [
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
  ],
}
`;

exports[`should transpile new style 8 1`] = `
Object {
  "duration": 1000,
  "matrix": true,
  "query": "WITH idx_sel AS (select \`9643631571529434\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.4075242197275857'))) as \`9643631571529434\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,intDiv(samples.timestamp_ns, 1000000) as \`timestamp_ns\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc",
  "stream": Array [
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
    [Function],
  ],
}
`;

exports[`should transpile new style 9 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`6359698086119736\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.7186063017626447_json'))) as \`6359698086119736\`), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\`,arrayFilter((x) -> x.2 != '', [('sid', if(JSONType(samples.string, 'str_id') == 'String', JSONExtractString(samples.string, 'str_id'), JSONExtractRaw(samples.string, 'str_id')))]) as \`extra_labels\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) and (isValidJSON(samples.string) = 1) and ((arrayExists(x -> x.1 == 'sid' AND (coalesce(toFloat64OrNull(x.2) >= '598', 0)), extra_labels) != 0) or ((arrayExists(x -> x.1 == 'sid', extra_labels) = 0) and (arrayExists(x -> x.1 == 'sid', labels) = 1) and (toFloat64OrNull(arrayFirst(x -> x.1 == 'sid', labels).2) >= '598'))) order by \`timestamp_ns\` desc,\`labels\` desc limit 2000) select * from sel_a order by \`labels\` desc,\`timestamp_ns\` desc",
  "stream": Array [],
}
`;

exports[`should transpile new style 10 1`] = `
Object {
  "duration": 1000,
  "matrix": false,
  "query": "WITH idx_sel AS (select \`7314839285914427\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '0.5505504081219323'))) as \`7314839285914427\`), sel_a AS (select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\`,arrayFilter(x -> x.1 != '' AND x.2 != '', arrayZip(['e'], arrayMap(x -> x[length(x)], extractAllGroupsHorizontal(string, '^([^0-9]+)[0-9]+$')))) as \`extra_labels\` from loki.samples_read as \`samples\` where (\`samples\`.\`timestamp_ns\`   between 1638802620000000000 and 1638803220000000000) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` desc,\`labels\` desc limit 2000) select * from sel_a order by \`labels\` desc,\`timestamp_ns\` desc",
  "stream": Array [],
}
`;

exports[`should transpile plugins 1`] = `
Array [
  Object {
    "labels": Object {
      "lbl1": "a",
    },
    "timestamp_ns": "0",
    "value": 10,
  },
  Object {
    "EOF": true,
  },
]
`;

exports[`should transpile series 1`] = `"WITH idx_sel AS ((select \`9617929704701289\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (\`val\` = '123'))) as \`9617929704701289\`)) select DISTINCT \`fingerprint\`,\`labels\` from loki.time_series where (fingerprint IN idx_sel) and (1 == 1)"`;

exports[`should transpile tail 1`] = `
Object {
  "query": "WITH idx_sel AS (select \`47513429828910003\`.\`fingerprint\` from (select \`fingerprint\` from \`loki\`.\`time_series_gin\` where ((\`key\` = 'test_id') and (match(val, '_ws') = 1))) as \`47513429828910003\`) select \`samples\`.\`labels\` as \`labels\`,\`samples\`.\`string\` as \`string\`,\`samples\`.\`fingerprint\` as \`fingerprint\`,samples.timestamp_ns as \`timestamp_ns\` from loki.samples_v4 as \`samples\` where (\`samples\`.\`timestamp_ns\` > (toUnixTimestamp(now()) - 5) * 1000000000) and (samples.fingerprint IN idx_sel) order by \`timestamp_ns\` asc",
  "stream": Array [],
}
`;
